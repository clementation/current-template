/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SuperSecretRabbitPageRouteImport } from './routes/super-secret-rabbit-page'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkIndexRouteImport } from './routes/work.index'
import { Route as WorkItemIdRouteImport } from './routes/work.$itemId'

const SuperSecretRabbitPageRoute = SuperSecretRabbitPageRouteImport.update({
  id: '/super-secret-rabbit-page',
  path: '/super-secret-rabbit-page',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkIndexRoute = WorkIndexRouteImport.update({
  id: '/work/',
  path: '/work/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkItemIdRoute = WorkItemIdRouteImport.update({
  id: '/work/$itemId',
  path: '/work/$itemId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/super-secret-rabbit-page': typeof SuperSecretRabbitPageRoute
  '/work/$itemId': typeof WorkItemIdRoute
  '/work': typeof WorkIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/super-secret-rabbit-page': typeof SuperSecretRabbitPageRoute
  '/work/$itemId': typeof WorkItemIdRoute
  '/work': typeof WorkIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/super-secret-rabbit-page': typeof SuperSecretRabbitPageRoute
  '/work/$itemId': typeof WorkItemIdRoute
  '/work/': typeof WorkIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contact'
    | '/super-secret-rabbit-page'
    | '/work/$itemId'
    | '/work'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/contact' | '/super-secret-rabbit-page' | '/work/$itemId' | '/work'
  id:
    | '__root__'
    | '/'
    | '/contact'
    | '/super-secret-rabbit-page'
    | '/work/$itemId'
    | '/work/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactRoute: typeof ContactRoute
  SuperSecretRabbitPageRoute: typeof SuperSecretRabbitPageRoute
  WorkItemIdRoute: typeof WorkItemIdRoute
  WorkIndexRoute: typeof WorkIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/super-secret-rabbit-page': {
      id: '/super-secret-rabbit-page'
      path: '/super-secret-rabbit-page'
      fullPath: '/super-secret-rabbit-page'
      preLoaderRoute: typeof SuperSecretRabbitPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/': {
      id: '/work/'
      path: '/work'
      fullPath: '/work'
      preLoaderRoute: typeof WorkIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/$itemId': {
      id: '/work/$itemId'
      path: '/work/$itemId'
      fullPath: '/work/$itemId'
      preLoaderRoute: typeof WorkItemIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  SuperSecretRabbitPageRoute: SuperSecretRabbitPageRoute,
  WorkItemIdRoute: WorkItemIdRoute,
  WorkIndexRoute: WorkIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
